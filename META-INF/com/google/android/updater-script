assert(getprop("ro.product.device") == "violet" || getprop("ro.build.product") == "&&device&&" || abort("E3004: This package is for device: &&device&&; this device is " + getprop("ro.product.device") + "."););
ifelse(is_mounted("/system_root"), unmount("/system_root"));
ui_print("----------------------------------------------");
ui_print("                  Oxygen OS");
ui_print("             Ported by : &&porter&&");
ui_print("        Flashable zip made using GSI2ROM");
ui_print("                by @oddlyspaced");
ui_print("----------------------------------------------");
ui_print(" Android version: &&android_version&&");
ui_print(" Ported from: &&port&&");
ui_print(" Build date: &&date&&");
ui_print(" Security patch: &&security&&");
ui_print(" Device: &&device&&");
ui_print("----------------------------------------------");
package_extract_dir("install", "/tmp/install");
set_metadata_recursive("/tmp/install", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644);
set_metadata_recursive("/tmp/install/bin", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0755);
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system_root", "");
run_program("/tmp/install/bin/backuptool.sh", "backup", "/system");
unmount("/system_root");
show_progress(0.650000, 0);
ui_print("Patching system image unconditionally...");
block_image_update("/dev/block/bootdevice/by-name/system", package_extract_file("system.transfer.list"), "system.new.dat.br", "system.patch.dat") ||
  abort("E1001: Failed to update system image.");
show_progress(0.100000, 0);
ui_print("Patching vendor image unconditionally...");
block_image_update("/dev/block/bootdevice/by-name/vendor", package_extract_file("vendor.transfer.list"), "vendor.new.dat.br", "vendor.patch.dat") ||
  abort("E2001: Failed to update vendor image.");
show_progress(0.020000, 10);
mount("ext4", "EMMC", "/dev/block/bootdevice/by-name/system", "/system_root", "");
run_program("/tmp/install/bin/backuptool.sh", "restore", "/system");
unmount("/system_root");
show_progress(0.050000, 5);
package_extract_file("boot.img", "/dev/block/bootdevice/by-name/boot");
show_progress(0.200000, 10);
set_progress(1.000000);
